export const weaponLevels =    ' 1,  5, 10,  15,  20, 20+,  25,  30,  35,  40, 40+,  45,  50, 50+,  55,  60, 60+,  65,  70, 70+,  75,  80, 80+,  85, 90'
.split(',').map(lv => lv.trim()) // 25 EA

export const weaponLvIndex = level => weaponLevels.indexOf(level)

const weaponLvSheet = {
  atk_41:         [41, 54, 69,  84,  99, 125, 140, 155, 169, 184, 210, 224, 238, 264, 278, 293, 319, 333, 347, 373, 387, 401, 427, 440, 454],
  atk_42:         [42, 56, 74,  91, 109, 135, 152, 170, 187, 205, 231, 248, 266, 292, 309, 327, 353, 370, 388, 414, 431, 449, 475, 492, 510],
  atk_44:         [44, 58, 76,  93, 110, 141, 158, 176, 193, 210, 241, 258, 275, 307, 324, 341, 373, 390, 408, 439, 457, 475, 506, 524, 542],
  atk_46:         [46, 62, 82, 102, 122, 153, 173, 194, 214, 235, 266, 287, 308, 340, 361, 382, 414, 435, 457, 488, 510, 532, 563, 586, 608],
  atk_48:         [48, 65, 87, 110, 133, 164, 188, 212, 236, 261, 292, 316, 341, 373, 398, 423, 455, 480, 506, 537, 563, 590, 621, 648, 674],
  atk_49:         [49, 68, 93, 119, 145, 176, 203, 230, 258, 286, 317, 346, 374, 406, 435, 464, 495, 525, 555, 586, 617, 648, 679, 709, 741],
  em_36:          [36, 42, 49,  56,  64,  64,  71,  78,  85,  93,  93, 100, 107, 107, 115, 122, 122, 129, 136, 136, 144, 151, 141, 158, 165],
  em_43:          [43, 50, 59,  68,  76,  76,  85,  94, 103, 111, 111, 120, 129, 129, 137, 146, 146, 155, 164, 164, 172, 181, 181, 190, 198],
  em_48:          [48, 56, 65,  75,  85,  85,  95, 104, 114, 124, 124, 133, 143, 143, 153, 162, 162, 172, 182, 182, 191, 201, 201, 211, 221],
  'atk%_7.2':     [7.2, 8.4,  9.8, 11.3, 12.7, 12.7, 14.2, 15.6, 17.1, 18.5, 18.5, 20, 21.4, 21.4, 22.9, 24.4, 24.4, 25.8, 27.3, 27.3, 28.7, 30.2, 30.2, 31.6, 33.1],
  'atk%_9':       [ 9, 10.5, 12.3, 14.1, 15.9, 15.9, 17.7, 19.5, 21.4, 23.2, 23.2, 35, 26.8, 26.8, 28.6, 30.4, 30.4, 32.3, 34.1, 34.1, 35.9, 37.7, 37.7, 39.5, 41.3],
  'atk%_10.8':    [10.8, 12.5, 14.7, 16.9, 19.1, 19.1, 21.3, 23.4, 25.6, 27.8, 27.8, 30, 32.2, 32.2, 34.4, 36.5, 36.5, 38.7, 40.9, 40.9, 43.1, 45.3, 45.3, 47.4, 49.6],
  'atk%_12':      [  12, 13.9, 16.4, 18.8, 21.2, 21.2, 23.6, 26.1, 28.5, 30.9, 30.9, 33.3, 35.7, 35.7, 38.2, 40.6, 40.6, 43, 45.4, 45.4, 47.9, 50.3, 50.3, 52.7, 55.1],
  'er%_6.7':      [ 6.7, 7.7, 9.1, 10.4, 11.8, 11.8, 13.1, 14.5, 15.8, 17.2, 17.2, 18.5, 19.9, 19.9, 21.2, 22.6, 22.6, 23.9, 25.2, 25.2, 26.6, 27.9, 27.9, 29.3, 30.6],
  'er%_8':        [   8,  9.3, 10.9, 12.5, 14.1, 14.1, 15.8, 17.4, 19, 20.6, 20.6, 22.2, 23.8, 23.8, 25.4, 27.1, 27.1, 28.7, 30.3, 30.3, 31.9, 33.5, 33.5, 35.1, 36.8],
  'er%_10':       [  10, 11.6, 13.6, 15.7, 17.7, 17.7, 19.7, 21.7, 23.7, 25.8, 25.8, 27.8, 29.8, 29.8, 31.8, 33.8,33.8,35.9, 37.9, 37.9, 39.9, 41.9, 41.9, 43.9, 45.9],
  'er%_12':       [  12, 13.9, 16.4, 18.8, 21.2, 21.2, 23.6, 26.1, 28.5, 30.9, 30.9, 33.3, 35.7, 35.7, 38.2, 40.6, 40.6, 43, 45.4, 45.4, 47.9, 50.3, 50.3, 52.7, 55.1],
  'er%_13.3':     [13.3, 15.5, 18.2, 20.9, 23.6, 23.6, 26.3, 28.9, 31.6, 34.3, 34.3, 37, 39.7, 39.7, 42.4, 45.1, 45.1, 47.8, 50.5, 50.5, 53.2, 55.9, 55.9, 58.6, 61.3],
  'critRate%_4.8':[ 4.8,  5.6,  6.5,  7.5, 8.5, 8.5,  9.5, 10.4, 11.4, 12.4, 12.4, 13.3, 14.3, 14.3, 15.3, 16.2, 16.2, 17.2, 18.2, 18.2, 19.1, 20.1, 20.1, 21.1, 22.1],
  'critRate%_6':  [   6,    7,  8.2, 9.4, 10.6, 10.6, 11.8,  13, 14.2, 15.5, 15.5, 16.7, 17.9, 17.9, 19.1, 20.3, 20.3, 21.5, 22.7, 22.7, 23.9, 25.1, 25.1, 26.4, 27.6],
  'critRate%_9.6':[ 9.6, 11.2, 13.1,   15,  17,  17, 18.9, 20.8, 22.8, 24.7, 24.7, 26.7, 28.6, 28.6, 30.5, 32.5, 32.5, 34.4, 36.3, 36.3, 38.3, 40.2, 40.2, 42.2, 44.1],
  'critDmg%_8':   [   8,  9.3, 10.9, 12.5, 14.1, 14.1, 15.8, 17.4, 19, 20.6, 20.6, 22.2, 23.8, 23.8, 25.4, 27.1, 27.1, 28.7, 30.3, 30.3, 31.9, 33.5, 33.5, 35.1, 36.8],
  'critDmg%_9.6': [ 9.6, 11.2, 13.1,   15,  17,  17, 18.9, 20.8, 22.8, 24.7, 24.7, 26.7, 28.6, 28.6, 30.5, 32.5, 32.5, 34.4, 36.3, 36.3, 38.3, 40.2, 40.2, 42.2, 44.1],
  'critDmg%_12':  [  12, 13.9, 16.4, 18.8, 21.2, 21.2, 23.6, 26.1, 28.5, 30.9, 30.9, 33.3, 35.7, 35.7, 38.2, 40.6, 40.6, 43, 45.4, 45.4, 47.9, 50.3, 50.3, 52.7, 55.1],
  'critDmg%_14.4':[14.4, 16.7, 19.6, 22.5, 25.4, 25.4, 28.4, 31.3, 34.2, 37.1, 37.1, 40, 42.9, 42.9, 45.8, 48.7, 48.7, 51.6, 54.5, 54.5, 57.4, 60.3, 60.3, 63.2, 66.2],
  'physDmg%_4.5': [ 4.5,  5.2,  6.1,    7,   8,   8,  8.9,  9.8, 10.7, 11.6, 11.6, 12.5, 13.4, 13.4, 14.3, 15.2, 15.2, 16.1,   17,   17, 17.9, 18.9, 18.9, 19.8, 20.7],
}

const LEVEL_COUNT = 25

Object.keys(weaponLvSheet).map(p => {
  let actualCount
  if (Array.isArray(weaponLvSheet[p])) {
    actualCount = weaponLvSheet[p].length
  }
  if (typeof weaponLvSheet[p] === 'string') {
    actualCount = weaponLvSheet[p].split(',').length
  }
  if (actualCount < LEVEL_COUNT) {
    alert(`weaponsLv.js ${p}의 아이템 갯수가 부족합니다.`)
  }
  if (actualCount > LEVEL_COUNT) {
    alert(`weaponsLv.js ${p}의 아이템 갯수가 더 많습니다.`)
  }
})

export default weaponLvSheet